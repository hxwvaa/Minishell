Duplicate Signed-off-by lines.
xecutionbwspblobbplist00×executionIlocblobbuiltinIlocblob(ÿÿÿÿÿÿexecute.cIlocbl



expand.cIlocblobDuplicate Signed-off-by lines.;
(ÿÿÿÿÿÿexpand.cIlocblobDuplicate Signed-off-by lines.;
ÿÿÿÿÿÿDuplicate Signed-off-by lines.libftbwspblobbplist0



execution_splitted.oIlocblobxecutionbwspblobbplist00×executionIlocblobbuiltinIlocblob(ÿÿÿÿÿÿexecute.cIlocbllibftIlocblob
Xÿÿÿÿÿÿexecution_splitted.oIlocblobxecutionbwspblobbplist00×executionIlocblobbuiltinIlocblob(ÿÿÿÿÿÿexecute.cIlocbllibftIlocblob
;
MakefileIlocblobx{{1475, 491}, {770, %1=I`myz{|}~šlibftvSrnlong
MakefileIlocblobx{{1475, 491}, {770, %1=I`myz{|}~šlibftvSrnlong
Duplicate Signed-off-by lines.
XÿÿÿÿÿÿDuplicate Signed-off-by lines.
toklist_cmdlist.cIlocblobMakefileIlocblobx{{1475, ;
result.txtIlocblobfix hd expansion
27c13afc7d4710b048674a31fecd390363ea5b5ebranch 'gazoline' of github.com:hxwvaa/minismile
7b73797bac1eb1913506223882f80a0ffed1ecddnot-for-mergebranch 'gaz' of github.com:hxwvaa/minismile
b4fd851fba00204537310eddba9b060a8502eb51not-for-mergebranch 'gsm' of github.com:hxwvaa/minismile
652b6963612faed3f90c368b9567a522ec943710not-for-mergebranch 'hxwvaa' of github.com:hxwvaa/minismile
634938f4e6f25bb49a3233ffa81ade5f05ca32dfnot-for-mergebranch 'main' of github.com:hxwvaa/minismile
b191bb2e081275a374469bc36ed0680020f5e25dnot-for-mergebranch 'tachi' of github.com:hxwvaa/minismile
d269d049374c30416442a21b4dd09ced2080a5b2not-for-mergebranch 'tachi_backup' of github.com:hxwvaa/minismile
ref: refs/heads/gsm
89f2ece1bc46b41f80c22afdf7cdc7b2bc1fbde2
[core]
repositoryformatversion = 0
filemode = true
bare = false
logallrefupdates = true
ignorecase = true
precomposeunicode = true
[remote "origin"]
url = git@github.com:hxwvaa/minismile.git
fetch = +refs/heads/*:refs/remotes/origin/*
[branch "main"]
remote = origin
merge = refs/heads/main
[branch "gazoline"]
remote = origin
merge = refs/heads/gazoline
[branch "tachi"]
remote = origin
merge = refs/heads/tachi
[branch "gsm"]
remote = origin
merge = refs/heads/gsm
Unnamed repository; edit this file 'description' to name the repository.
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
 sort | uniq -c | sed -e '/^[ ]*1[ ]/d')" || {
echo >&2 Duplicate Signed-off-by lines.
exit 1
env
export



exit 1
exit 1
pwd | < Makefile wc -l
pwd | < Makefile 
pwd | < Makefile 
ls | pwd
ls | pwd
/bin/pwd | < Makefile 
whereis pwd
/bin/pwd | < Makefile 
cat Makefile | < Makefile
cat Makefile | < Makefile
cat Makefile 
/bin/pwd
/bin/pwd | < Makefile 
pwd | < Makefile
cat Makefile | < Makefile
exit
$5df
echo $$
$$
$PWD
$PWD=
echo $PWD=
echo $PWD=a
echo $PWD=hasgdfhgasdf
echo $PWD=$PWD
echo $PWD=$PWD
echo "$PWD'"
echo "'$PWD'"
echo '$PWD'
echo '$PWD'
echo '$PWD'
'$PWD'
'$PWD'
'$PWD'
echo $PWD"asd"
$PWD"asd"
echo $?
echo $?a
$PWD$
$PWD-
$PWD9
$PWDa
$PWD_
$PWD+
$PWD%
$PWD!
$PWD
$PWD@
$PWD~
$PWD~$PWD
$PWD0
"$PWD "
echo $PWD$
echo '$PWD'
$PWD$
pwd
env
cd builtins 
env
make
./minis
./minishell
clear
pwd
cd builtins 
pwd
clear
cd
clear
unset HOME
pwd
$HOME
cd
pwd
clear
ls
clear
env
clear
ls
clear
pwd
exit
pwd
exit
pwd
mkdir a
cd a
pwd
cd a
pwd
cd a
pwd
cd a
pwd
cd a
pwd
cd a
ls
echo hello
cd a
ls | pwd
ls | cd a | pwd
pwd
cd a
pwd
echo hello
cd a
pwd
cd a
pwd
ls | pwd
cd a
